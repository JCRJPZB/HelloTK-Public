{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/NetWork/LoginMsg.ts"],"names":["_decorator","Component","Configure","Subscribe","MD5","ccclass","property","LoginMsg","onLoad","listen","node","uuid","login_test","login","userId","pw","datetime","platform","others","trigger","pwCode","md5","loginJson","JSON","parse","toString","console","log","stringify","parseMsg","token","key","getConfigure","verifyCode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,G,iBAAAA,G;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BN,SAD9B,CACwC;AAEpCO,QAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA,sCAAUC,MAAV,CAAiB,iBAAjB,EAAoC,KAAKC,IAAL,CAAUC,IAA9C,EAAoD,MAAM,CACtD;AACA;AACH,WAHD;AAIH;;AAEuB,eAAVC,UAAU,GAAG;AAAE,iBAAO,IAAP;AAAc;;AAE3CC,QAAAA,KAAK,CAACC,MAAD,EAAiBC,EAAjB,EAA6BC,QAA7B,EAA+CC,QAA/C,EAAiEC,MAAjE,EAA+E;AAChF;AAAA;AAAA,sCAAUC,OAAV,CAAkB,eAAlB,EAAmC,EAAnC;AACA,cAAIC,MAAM,GAAG;AAAA;AAAA,0BAAIC,GAAJ,CAAQN,EAAR,CAAb;AACA,cAAIO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,IAAX,CAAhB;AACAF,UAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBR,MAAtB;AACAQ,UAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBF,MAAtB;AACAE,UAAAA,SAAS,CAAC,UAAD,CAAT,GAAwBN,QAAQ,CAACS,QAAT,EAAxB;AACAH,UAAAA,SAAS,CAAC,UAAD,CAAT,GAAwBL,QAAxB;AACAK,UAAAA,SAAS,CAAC,QAAD,CAAT,GAAsBJ,MAAtB;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,SAAL,CAAeN,SAAf,CAAZ;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAA;AAAA,0BAAIN,GAAJ,CAAQE,IAAI,CAACK,SAAL,CAAeN,SAAf,CAAR,CAAZ;AACH;;AAEDO,QAAAA,QAAQ,CAACf,MAAD,EAAiBE,QAAjB,EAAmCC,QAAnC,EAAqDa,KAArD,EAAoEZ,MAApE,EAAkF;AACtF,cAAIa,GAAG,GAAG;AAAA;AAAA,sCAAUC,YAAV,CAAuB,MAAvB,EAA+B,WAA/B,CAAV;;AACA,cAAI,CAACD,GAAL,EAAU;AAAE;AAAA;AAAA,wCAAUZ,OAAV,CAAkB,WAAlB,EAA+B,2BAA/B;AAA6D;AAAS;;AAClF,cAAIc,UAAU,GAAG;AAAA;AAAA,0BAAIZ,GAAJ,CAAQP,MAAM,GAAGE,QAAQ,CAACS,QAAT,EAAT,GAA+BR,QAA/B,GAA0CC,MAA1C,GAAmDa,GAA3D,CAAjB;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYM,UAAZ;;AACA,cAAIA,UAAU,KAAKH,KAAnB,EAA0B;AACtB,aADsB,CACpB;;AACFJ,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,WAHD,MAGO;AACH,aADG,CACD;;AACFD,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ;;AAzCmC,O;AA4CxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { _decorator, Component } from 'cc';\r\nimport { Configure } from '../Tools/Configure';\r\nimport { Subscribe } from '../Tools/Subscribe';\r\nimport { MD5 } from './MD5';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('LoginMsg')\r\nexport class LoginMsg extends Component {\r\n\r\n    onLoad() {\r\n        // console.log(Date.parse(\"2021-9-8 8:38\"))\r\n        // this.node.on(\"settings loaded\", () => {\r\n        //     // this.parseMsg(\"user_pzb\", 1631061480000, \"web\", \"d71148d40d2936ba917b8fa636f33fee\");\r\n        //     this.login(\"user_pzb\", \"rj162pzb\", 1631061480000, \"web\", \"\");\r\n        // });\r\n        Subscribe.listen(\"settings loaded\", this.node.uuid, () => {\r\n            // this.parseMsg(\"user_pzb\", 1631061480000, \"web\", \"d71148d40d2936ba917b8fa636f33fee\");\r\n            // this.login(\"user_pzb\", \"rj162pzb\", 1631061480000, \"web\", \"\");\r\n        });\r\n    }\r\n\r\n    public static login_test() { return true; }\r\n\r\n    login(userId: string, pw: string, datetime: number, platform: string, others?: any) {\r\n        Subscribe.trigger(\"login success\", \"\");\r\n        let pwCode = MD5.md5(pw);\r\n        let loginJson = JSON.parse(\"{}\");\r\n        loginJson[\"userId\"] = userId;\r\n        loginJson[\"pwCode\"] = pwCode;\r\n        loginJson[\"datetime\"] = datetime.toString();\r\n        loginJson[\"platform\"] = platform;\r\n        loginJson[\"others\"] = others;\r\n        console.log(JSON.stringify(loginJson))\r\n        console.log(MD5.md5(JSON.stringify(loginJson)))\r\n    }\r\n\r\n    parseMsg(userId: string, datetime: number, platform: string, token: string, others?: any) {\r\n        let key = Configure.getConfigure(\"base\")[\"VerifyKey\"];\r\n        if (!key) { Subscribe.trigger(\"alert err\", \"Can't get the verify key!\"); return; }\r\n        let verifyCode = MD5.md5(userId + datetime.toString() + platform + others + key);\r\n        console.log(verifyCode)\r\n        if (verifyCode === token) {\r\n            ; // 验证成功，允许登录\r\n            console.log(\"Success.\")\r\n        } else {\r\n            ; // 验证失败，不允许登录\r\n            console.log(\"Failed.\")\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}