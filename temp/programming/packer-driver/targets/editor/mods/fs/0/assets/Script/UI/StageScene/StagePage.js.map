{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/UI/StageScene/StagePage.ts"],"names":["_decorator","Label","Sprite","ItemMgr","Functions","Generator","ImgMgr","Subscribe","UIBase","StageMgr","ccclass","property","StagePage","onInit","stageName","addClickEvent","trigger","listen","name","changeSelect","stage_name","getComp","description","i","goal_temp","toString","goal","push","reward_item_root","getNode","start_btn","data","stage_id","curr_stage_id","conf","getInstance","getStageConfById","string","goal_strs","getStageGoal","length","gen","setItemList","off","on","items_conf","itemMgr","portrait","reward_items","generator","initItem","pop","destroy","node","sf","getComponent","img_name","getItemConf","spriteFrame","getImg","num","getChildByName","numToChar","Math","floor","first","active"],"mappings":"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","sourcesContent":["import { _decorator, Node, Label, Sprite } from 'cc';\r\nimport { ItemMgr } from '../../Items/ItemMgr';\r\nimport { Functions } from '../../Tools/Functions';\r\nimport { Generator } from '../../Tools/Generator';\r\nimport { ImgMgr } from '../../Tools/ImgMgr';\r\nimport { Subscribe } from '../../Tools/Subscribe';\r\nimport { UIBase } from '../UIBase';\r\nimport { StageMgr } from './StageMgr';\r\nconst { ccclass, property } = _decorator;\r\n \r\n@ccclass('StagePage')\r\nexport class StagePage extends UIBase {\r\n\r\n    private stage_name: Label | undefined;\r\n    private description: Label | undefined;\r\n    private goal: Label[] = [];\r\n    private reward_item_root: Node | undefined;\r\n    private reward_items: Node[] = [];\r\n    private start_btn: Node | undefined;\r\n    private curr_stage_id: string = \"\";\r\n\r\n    protected onInit(stageName: string) {\r\n        this.addClickEvent(\"ReturnBtn\", () => {\r\n            Subscribe.trigger(\"load scene\", \"Main\", null);\r\n        });\r\n        this.addClickEvent(\"Inventory\", () => {\r\n            Subscribe.trigger(\"open UI\", \"Inventory\");\r\n        });this.addClickEvent(\"Formation_Btn\", () => {\r\n            Subscribe.trigger(\"open UI\", \"Formation\");\r\n        });\r\n\r\n        Subscribe.listen(\"change select stage\", this.name, this.changeSelect, this); // 监听切换关卡事件\r\n        this.stage_name = this.getComp(\"StageName_Label\", \"Label\");\r\n        this.description = this.getComp(\"Description_Content\", \"Label\");\r\n        for (let i = 1; i <= 3; i++) {\r\n            let goal_temp = this.getComp(\"Goal_\" + i.toString(), \"Label\");\r\n            if (goal_temp) { this.goal.push(goal_temp); }\r\n        }\r\n        this.reward_item_root = this.getNode(\"Reward_Content\");\r\n        this.start_btn = this.getNode(\"Start_Btn\");\r\n\r\n        Subscribe.trigger(\"generator stage ui\", stageName, this.getNode(\"StageUI_Root\"));\r\n    }\r\n\r\n    private changeSelect(data: any) {\r\n        let stage_id = data[\"stage_id\"]; // 根据关卡名读取当前关卡配置\r\n        if (this.curr_stage_id === stage_id) {\r\n            return;\r\n        }\r\n        this.curr_stage_id = stage_id;\r\n        let conf = StageMgr.getInstance().getStageConfById(stage_id);\r\n        if (this.stage_name) { this.stage_name.string = conf[\"name\"]; } // 修改关卡名标签内容\r\n        if (this.description) { this.description.string = conf[\"description\"]; }\r\n        let goal_strs = StageMgr.getInstance().getStageGoal(conf[\"id\"]); // 获取三星条件\r\n        if (this.goal.length >= goal_strs.length) {\r\n            for (let i = 0; i < this.goal.length; i++) {\r\n                if (i < goal_strs.length) { this.goal[i].string = goal_strs[i]; }\r\n            }\r\n        }\r\n\r\n        let gen = Generator.getInstance(); // 预制件实例化生成器\r\n        this.setItemList(conf[\"items\"], gen); // 设置掉落清单\r\n\r\n        if (this.start_btn) { // 点击确认按钮\r\n            this.start_btn.off(\"click\");\r\n            this.start_btn.on(\"click\", () => {\r\n                Subscribe.trigger(\"load scene\", \"BattleField\", data); // 进入战斗场景\r\n            });\r\n        }\r\n    }\r\n\r\n    private setItemList(items_conf: any, gen: Generator) {\r\n        let itemMgr = ItemMgr.getInstance(); // 物品管理器\r\n        for (let i = 0; i < items_conf.length; i++) {\r\n            if (this.reward_item_root) {\r\n                let portrait: Node | null = null;\r\n                if (this.reward_items.length <= i) { // 如果现有的物品节点数量不够则生成新的\r\n                    portrait = gen.generator(this.reward_item_root, \"ItemPortrait\"); // 实例化掉落物图片预制件\r\n                    if (portrait) { this.reward_items.push(portrait); } // 把新的放进去\r\n                } else { // 反之则使用已有的\r\n                    portrait = this.reward_items[i];\r\n                }\r\n                if (portrait) { this.initItem(items_conf[i], portrait, itemMgr); } // 初始化物品\r\n            }\r\n        }\r\n        while (this.reward_items.length > items_conf.length) { this.reward_items.pop()?.destroy(); } // 如果现有的比需要的物品节点多，则将多余的删除\r\n    }\r\n\r\n    private initItem(conf: any, node: Node, itemMgr: ItemMgr) {\r\n        let sf = node.getComponent(Sprite); // 获得掉落物图片的精灵组件\r\n        let img_name = itemMgr.getItemConf(conf[\"id\"])[\"img\"]; // 获取配置中的贴图路径\r\n        if (img_name && sf) {\r\n            sf.spriteFrame = ImgMgr.getInstance().getImg(img_name); // 根据配置设置精灵组件贴图\r\n        }\r\n        let num = node.getChildByName(\"Num\")?.getComponent(Label); // 物品数量Label\r\n        if (num) {\r\n            if (conf[\"max\"] > 1) { // 最大掉落数大于1则显示掉落区间\r\n                if (conf[\"max\"] == conf[\"min\"]) { // 最大掉落数等于最小掉落数则显示掉落数\r\n                    num.string = Functions.numToChar(conf[\"max\"]);\r\n                } else { // 否则显示平均值\r\n                    num.string = \"约\" + Functions.numToChar(Math.floor((conf[\"max\"] + conf[\"min\"]) / 2));\r\n                }\r\n            }\r\n        }\r\n        let first = node.getChildByName(\"First\"); // 首通奖励标志\r\n        if (first && conf[\"is_once\"]) {\r\n            first.active = true;\r\n        }\r\n    }\r\n}\r\n"]}