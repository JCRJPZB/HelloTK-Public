{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/Tools/ImgMgr.ts"],"names":["_decorator","Component","SpriteFrame","ResMgr","Subscribe","ccclass","property","ImgMgr","getInstance","ist","constructor","name","Map","loadDir","spfs","length","trigger","forEach","spf","spf_map","set","getImg","get"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;AAC7BC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;wBAGjBO,M,WADZF,OAAO,CAAC,QAAD,C,mCAAR,MACaE,MADb,SAC4BN,SAD5B,CACsC;AAKT,eAAXO,WAAW,GAAW;AAChC,cAAI,CAACD,MAAM,CAACE,GAAZ,EAAiB;AAAEF,YAAAA,MAAM,CAACE,GAAP,GAAa,IAAIF,MAAJ,CAAW,QAAX,CAAb;AAAoC;;AACvD,iBAAOA,MAAM,CAACE,GAAd;AACH;;AAEOC,QAAAA,WAAW,CAACC,IAAD,EAAe;AAC9B,gBAAMA,IAAN;;AAD8B,2CARU,IAAIC,GAAJ,EAQV;;AAE9B;AAAA;AAAA,gCAAOC,OAAP,CAAe,SAAf,EAA0B,GAA1B,EAA+BX,WAA/B,EAA6CY,IAAD,IAAyB;AAAE;AACnE,gBAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AAAE;AAAA;AAAA,0CAAUC,OAAV,CAAkB,WAAlB,EAA+B,iBAA/B;AAAmD;AAAS;;AACnFF,YAAAA,IAAI,CAACG,OAAL,CAAaC,GAAG,IAAI;AAAE,mBAAKC,OAAL,CAAaC,GAAb,CAAiBF,GAAG,CAACP,IAArB,EAA2BO,GAA3B;AAAkC,aAAxD,EAFiE,CAEN;;AAC3D;AAAA;AAAA,wCAAUF,OAAV,CAAkB,cAAlB;AACH,WAJD;AAKH;;AAEMK,QAAAA,MAAM,CAACV,IAAD,EAAe;AAAE;AAC1B,cAAIO,GAAG,GAAG,KAAKC,OAAL,CAAaG,GAAb,CAAiBX,IAAjB,CAAV;;AACA,cAAIO,GAAJ,EAAS;AAAE,mBAAOA,GAAP;AAAa;;AACxB,iBAAO,IAAP;AACH;;AAvBiC,O,kCAGE,I","sourcesContent":["import { _decorator, Component, Node, SpriteFrame } from 'cc';\r\nimport { ResMgr } from './ResMgr';\r\nimport { Subscribe } from './Subscribe';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ImgMgr')\r\nexport class ImgMgr extends Component {\r\n\r\n    private spf_map: Map<string, SpriteFrame> = new Map();\r\n    private static ist: ImgMgr | null = null;\r\n\r\n    public static getInstance(): ImgMgr {\r\n        if (!ImgMgr.ist) { ImgMgr.ist = new ImgMgr(\"ImgMgr\"); }\r\n        return ImgMgr.ist;\r\n    }\r\n\r\n    private constructor(name: string) {\r\n        super(name);\r\n        ResMgr.loadDir(\"Texture\", \"/\", SpriteFrame, (spfs: SpriteFrame[]) => { // 加载全部预制体\r\n            if (spfs.length < 1) { Subscribe.trigger(\"alert err\", \"No SpriteFrame \"); return; }\r\n            spfs.forEach(spf => { this.spf_map.set(spf.name, spf); }); // 用图片名作key，写配置需注意重名\r\n            Subscribe.trigger(\"ImgMgr ready\");\r\n        });\r\n    }\r\n\r\n    public getImg(name: string) { // 获取图片\r\n        let spf = this.spf_map.get(name);\r\n        if (spf) { return spf; }\r\n        return null;\r\n    }\r\n}\r\n"]}