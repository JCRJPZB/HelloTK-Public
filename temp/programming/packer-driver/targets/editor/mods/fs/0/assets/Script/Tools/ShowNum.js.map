{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/Tools/ShowNum.ts"],"names":["_decorator","Component","Node","Sprite","SpriteAtlas","Vec3","ccclass","property","ShowNum","onLoad","getNodeFromPool","index","numNode","numSpr","_poolArr","length","addComponent","push","parent","removeChild","showNumber","num","frameName","sprAtlas","removeReset","numArr","toString","split","i","node","addChild","sp","getComponent","s","spriteFrame","getSpriteFrame","pos","getPosition","setPosition","rect","width","y","z","removeAllChildren"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;;;;;;;OACrD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;yBAGjBQ,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAACH,WAAD,C,oCAFb,MACaI,OADb,SAC6BP,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA,4CAIJ,EAJI;AAAA;;AAMnCQ,QAAAA,MAAM,GAAG,CAER,CARkC,CAUnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEOC,QAAAA,eAAe,CAACC,KAAD,EAAsB;AACxC,cAAIC,OAAJ;AACA,cAAIC,MAAJ;;AACA,cAAI,KAAKC,QAAL,CAAcC,MAAd,IAAwB,CAAxB,IAA8BJ,KAAK,GAAG,CAAT,GAAc,KAAKG,QAAL,CAAcC,MAA7D,EAAqE;AACjEH,YAAAA,OAAO,GAAG,IAAIV,IAAJ,EAAV;AACAW,YAAAA,MAAM,GAAGD,OAAO,CAACI,YAAR,CAAqBb,MAArB,CAAT;;AACA,iBAAKW,QAAL,CAAcG,IAAd,CAAmBL,OAAnB;AACH;;AAEDA,UAAAA,OAAO,GAAG,KAAKE,QAAL,CAAcH,KAAd,CAAV;;AACA,cAAIC,OAAO,IAAIA,OAAO,CAACM,MAAvB,EAA+B;AAC3BN,YAAAA,OAAO,CAACM,MAAR,CAAeC,WAAf,CAA2BP,OAA3B;AACH;;AACD,iBAAOA,OAAP;AACH;;AAEMQ,QAAAA,UAAU,CAACC,GAAD,EAAcC,SAAiB,GAAG,OAAlC,EAAiD;AAC9D,cAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AAE3B,eAAKC,WAAL;AAEA,cAAIC,MAAgB,GAAGJ,GAAG,CAACK,QAAJ,GAAeC,KAAf,CAAqB,EAArB,CAAvB;AACA,cAAIf,OAAJ;AACA,cAAIC,MAAJ;;AAEA,eAAK,IAAIe,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGH,MAAM,CAACV,MAAnC,EAA2Ca,CAAC,EAA5C,EAAgD;AAAA;;AAC5ChB,YAAAA,OAAO,GAAG,KAAKF,eAAL,CAAqBkB,CAArB,CAAV;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBlB,OAAnB;AACA,gBAAImB,EAAE,GAAGnB,OAAO,CAACoB,YAAR,CAAqB7B,MAArB,CAAT;;AACA,gBAAI,CAAC4B,EAAL,EAAS;AAAE;AAAS;;AACpBlB,YAAAA,MAAM,GAAGkB,EAAT;AACA,gBAAIE,CAAS,GAAGR,MAAM,CAACG,CAAD,CAAtB;AACAf,YAAAA,MAAM,CAACqB,WAAP,GAAqB,KAAKX,QAAL,CAAcY,cAAd,CAA6Bb,SAAS,GAAGW,CAAzC,CAArB;AACA,gBAAIG,GAAG,GAAGxB,OAAO,CAACyB,WAAR,EAAV;;AACA,gBAAI,CAACxB,MAAM,CAACqB,WAAZ,EAAyB;AAAE;AAAS;;AACpCtB,YAAAA,OAAO,CAAC0B,WAAR,CAAoB,IAAIjC,IAAJ,CAAS,CAAC,wBAAAQ,MAAM,CAACqB,WAAP,4EAAoBK,IAApB,CAAyBC,KAAzB,IAAiC,CAAlC,IAAuCZ,CAAhD,EAAmDQ,GAAG,CAACK,CAAvD,EAA0DL,GAAG,CAACM,CAA9D,CAApB;AACH;AACJ;;AAEOlB,QAAAA,WAAW,GAAS;AACxB,eAAKK,IAAL,CAAUc,iBAAV;AACH;;AAjEkC,O;;;;;iBAEJ,I","sourcesContent":["import { _decorator, Component, Node, Sprite, SpriteAtlas, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ShowNum')\r\nexport class ShowNum extends Component {\r\n    @property(SpriteAtlas)\r\n    sprAtlas: SpriteAtlas | null = null;\r\n\r\n    private _poolArr: Array<any> = [];\r\n\r\n    onLoad() {\r\n\r\n    }\r\n\r\n    // public loadTexture( texturePath:string = \"res/game/laba_haiyang.png\",callBack:Function = null ) :void {\r\n    // this._callBack = callBack;\r\n    // let self = this;\r\n\r\n    // if(self._sprAtlas){\r\n    //     self._callBack();\r\n    // }else{\r\n    //     cc.loader.loadRes(texturePath, cc.SpriteAtlas, function (err, atlas:cc.SpriteAtlas) {\r\n    //         self._sprAtlas = atlas;\r\n    //         self._callBack();\r\n    //     })\r\n    // }\r\n    // }\r\n\r\n    public getNodeFromPool(index: number): Node {\r\n        let numNode: Node;\r\n        let numSpr: Sprite;\r\n        if (this._poolArr.length == 0 || (index + 1) > this._poolArr.length) {\r\n            numNode = new Node();\r\n            numSpr = numNode.addComponent(Sprite);\r\n            this._poolArr.push(numNode);\r\n        }\r\n\r\n        numNode = this._poolArr[index];\r\n        if (numNode && numNode.parent) {\r\n            numNode.parent.removeChild(numNode);\r\n        }\r\n        return numNode;\r\n    }\r\n\r\n    public showNumber(num: number, frameName: string = \"num2-\"): void {\r\n        if (this.sprAtlas == null) return;\r\n\r\n        this.removeReset();\r\n\r\n        let numArr: string[] = num.toString().split(\"\");\r\n        let numNode: Node;\r\n        let numSpr: Sprite;\r\n\r\n        for (let i: number = 0; i < numArr.length; i++) {\r\n            numNode = this.getNodeFromPool(i);\r\n            this.node.addChild(numNode);\r\n            let sp = numNode.getComponent(Sprite);\r\n            if (!sp) { return; }\r\n            numSpr = sp;\r\n            let s: string = numArr[i];\r\n            numSpr.spriteFrame = this.sprAtlas.getSpriteFrame(frameName + s);\r\n            let pos = numNode.getPosition();\r\n            if (!numSpr.spriteFrame) { return; }\r\n            numNode.setPosition(new Vec3((numSpr.spriteFrame?.rect.width + 2) * i, pos.y, pos.z));\r\n        }\r\n    }\r\n\r\n    private removeReset(): void {\r\n        this.node.removeAllChildren();\r\n    }\r\n}\r\n"]}