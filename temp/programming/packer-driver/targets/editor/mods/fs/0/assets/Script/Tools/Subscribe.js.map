{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/Tools/Subscribe.ts"],"names":["_decorator","Component","ccclass","property","Subscribe","listen","key","script","func","target","map","Map","client_map","has","get","bind","set","trigger","args","forEach","apply","remove","delete","reset","clear"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;2BAGjBI,S,WADZF,OAAO,CAAC,WAAD,C,mCAAR,MACaE,SADb,SAC+BH,SAD/B,CACyC;AAGrC;AACA;AACA;AACoB,eAANI,MAAM,CAACC,GAAD,EAAcC,MAAd,EAA8BC,IAA9B,EAA8CC,MAA9C,EAAgE;AAAE;AAClF,cAAIC,GAAsC,GAAG,IAAIC,GAAJ,EAA7C;;AACA,cAAI,KAAKC,UAAL,CAAgBC,GAAhB,CAAoBP,GAApB,CAAJ,EAA8B;AAC1BI,YAAAA,GAAG,GAAG,KAAKE,UAAL,CAAgBE,GAAhB,CAAoBR,GAApB,CAAN;AACH;;AACD,cAAII,GAAJ,EAAS;AACL,gBAAID,MAAJ,EAAY;AAAED,cAAAA,IAAI,GAAGA,IAAI,CAACO,IAAL,CAAUN,MAAV,CAAP;AAA2B;;AACzCC,YAAAA,GAAG,CAACM,GAAJ,CAAQT,MAAR,EAAgBC,IAAhB;AACA,iBAAKI,UAAL,CAAgBI,GAAhB,CAAoBV,GAApB,EAAyBI,GAAzB;AACA,mBAAO,IAAP;AACH,WALD,MAKO;AACH,mBAAO,KAAP;AACH;AACJ,SAnBoC,CAqBrC;AACA;AACA;;;AACqB,eAAPO,OAAO,CAACX,GAAD,EAAc,GAAGY,IAAjB,EAA4B;AAC7C,cAAIR,GAAG,GAAG,KAAKE,UAAL,CAAgBE,GAAhB,CAAoBR,GAApB,CAAV;;AACA,cAAI,CAACI,GAAL,EAAU;AAAE,mBAAO,KAAP;AAAe;;AAC3BA,UAAAA,GAAG,CAACS,OAAJ,CAAaX,IAAD,IAAoB;AAC5BA,YAAAA,IAAI,CAACY,KAAL,CAAWZ,IAAX,EAAiBU,IAAjB;AACH,WAFD;AAGH,SA9BoC,CAgCrC;AACA;AACA;;;AACoB,eAANG,MAAM,CAACf,GAAD,EAAcC,MAAd,EAA8B;AAC9C,cAAIG,GAAG,GAAG,KAAKE,UAAL,CAAgBE,GAAhB,CAAoBR,GAApB,CAAV;;AACA,cAAI,CAACI,GAAL,EAAU;AAAE,mBAAO,KAAP;AAAe;;AAC3B,cAAI,CAACH,MAAL,EAAa;AAAE,iBAAKK,UAAL,CAAgBU,MAAhB,CAAuBhB,GAAvB;AAA6B,mBAAO,IAAP;AAAc;;AAC1DI,UAAAA,GAAG,CAACY,MAAJ,CAAWf,MAAX;AACA,iBAAO,IAAP;AACH,SAzCoC,CA2CrC;AACA;AACA;;;AACmB,eAALgB,KAAK,GAAG;AAClB,eAAKX,UAAL,CAAgBY,KAAhB;AACH;;AAhDoC,O,yCAC2B,IAAIb,GAAJ,E","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Subscribe')\r\nexport class Subscribe extends Component {\r\n    private static client_map: Map<string, Map<string, Function>> = new Map();\r\n\r\n    // ############\r\n    //   添加监听\r\n    // ############\r\n    public static listen(key: string, script: string, func: Function, target?: unknown) { // func 传入之前可能需要 bind()\r\n        let map: Map<string, Function> | undefined = new Map();\r\n        if (this.client_map.has(key)) {\r\n            map = this.client_map.get(key);\r\n        }\r\n        if (map) {\r\n            if (target) { func = func.bind(target); }\r\n            map.set(script, func);\r\n            this.client_map.set(key, map);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ############\r\n    //   触发消息\r\n    // ############\r\n    public static trigger(key: string, ...args: any) {\r\n        let map = this.client_map.get(key);\r\n        if (!map) { return false; }\r\n        map.forEach((func: Function) => {\r\n            func.apply(func, args);\r\n        });\r\n    }\r\n\r\n    // ############\r\n    //   移除监听\r\n    // ############\r\n    public static remove(key: string, script: string) {\r\n        let map = this.client_map.get(key);\r\n        if (!map) { return false; }\r\n        if (!script) { this.client_map.delete(key); return true; }\r\n        map.delete(script);\r\n        return true;\r\n    }\r\n\r\n    // ############\r\n    //   清空列表\r\n    // ############\r\n    public static reset() {\r\n        this.client_map.clear();\r\n    }\r\n}\r\n"]}