{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/UI/MainScene/Inventory/Inventory.ts"],"names":["_decorator","Label","InventoryMgr","Subscribe","ItemMgr","Generator","UIBase","ccclass","property","Inventory","onInit","listen","name","changeItemNum","inventoryMgr","getInstance","itemMgr","gen","addClickEvent","trigger","category_root","getNode","item_root","item_browser_root","setCategroy","onOpen","refreshItems","onClose","removeAllChildren","itemTypes","getItemTypes","forEach","type","category_node","generator","on","category_name_lbl","getChildByName","getComponent","string","currType","items","getInventoryByType","length","item","getItemNode","node","active","onDestroy","remove"],"mappings":"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","sourcesContent":["import { _decorator, Node, Label } from 'cc';\r\nimport { InventoryMgr } from './InventoryMgr';\r\nimport { Subscribe } from '../../../Tools/Subscribe';\r\nimport { ItemMgr } from '../../../Items/ItemMgr';\r\nimport { Generator } from '../../../Tools/Generator';\r\nimport { UIBase } from '../../UIBase';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Inventory')\r\nexport class Inventory extends UIBase {\r\n\r\n    private inventoryMgr: InventoryMgr | null = null;\r\n    private itemMgr: ItemMgr | null = null;\r\n    private gen: Generator | null = null;\r\n\r\n    private category_root: Node | undefined;\r\n    private item_root: Node | undefined;\r\n    private item_browser_root: Node | undefined;\r\n\r\n    private currType: string = \"all\";\r\n\r\n    onInit() {\r\n        Subscribe.listen(\"collect item\", this.name, this.changeItemNum, this);\r\n        Subscribe.listen(\"change item num\", this.name, this.changeItemNum, this);\r\n        this.inventoryMgr = InventoryMgr.getInstance();\r\n        this.itemMgr = ItemMgr.getInstance();\r\n        this.gen = Generator.getInstance();\r\n        this.addClickEvent(\"Return\", () => {\r\n            Subscribe.trigger(\"go back page\");\r\n        }, this);\r\n\r\n        this.category_root = this.getNode(\"Category_Root\");\r\n        this.item_root = this.getNode(\"Item_Root\");\r\n        this.item_browser_root = this.getNode(\"Item_Browser_Root\");\r\n\r\n        this.setCategroy();\r\n    }\r\n\r\n    onOpen() {\r\n        this.refreshItems(\"all\");\r\n    }\r\n\r\n    onClose() {\r\n        if (this.item_browser_root) { this.item_browser_root.removeAllChildren(); }\r\n        if (this.item_root) { this.item_root.removeAllChildren(); }\r\n    }\r\n\r\n    private setCategroy() {\r\n        if (!this.itemMgr) { Subscribe.trigger(\"log err\", \"Inventory init failed!\"); return; }\r\n        let itemTypes = this.itemMgr.getItemTypes();\r\n        itemTypes.forEach(type => {\r\n            if (!this.gen) { this.gen = Generator.getInstance(); }\r\n            if (this.category_root) {\r\n                let category_node = this.gen.generator(this.category_root, \"Inventory_Category\");\r\n                category_node?.on(\"click\", () => { this.refreshItems(type[\"type_id\"]); });\r\n                let category_name_lbl = category_node?.getChildByName(\"Name\")?.getComponent(Label);\r\n                if (category_name_lbl) { category_name_lbl.string = type[\"type_name\"]; }\r\n            }\r\n        });\r\n    }\r\n\r\n    private refreshItems(type: string) {\r\n        this.currType = type;\r\n        if (this.item_browser_root) { this.item_browser_root.removeAllChildren(); }\r\n        if (this.item_root) { this.item_root.removeAllChildren(); }\r\n        let items: any[] = this.inventoryMgr?.getInventoryByType(type);\r\n        if (items && items.length >= 0) {\r\n            items.forEach(item => {\r\n                if (this.itemMgr && this.item_root && this.item_browser_root) {\r\n                    this.itemMgr.getItemNode(item[\"id\"], this.item_root, item[\"num\"], this.item_browser_root);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private changeItemNum() {\r\n        if (this.node.active) {\r\n            this.refreshItems(this.currType);\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        Subscribe.remove(\"collect item\", this.name);\r\n        Subscribe.remove(\"use item\", this.name);\r\n    }\r\n}\r\n"]}