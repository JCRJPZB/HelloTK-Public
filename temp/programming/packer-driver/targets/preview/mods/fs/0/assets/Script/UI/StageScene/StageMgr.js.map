{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/UI/StageScene/StageMgr.ts"],"names":["_decorator","Component","Configure","Subscribe","ccclass","property","StageMgr","constructor","name","Map","data","getStageData","conf","getConfigure","forEach","scene","scene_map","set","length","stage","stage_map","mergeData2Conf","goals_str","listen","changeStageState","getInstance","ist","test_stage_data","getSceneConf","get","curr_scene","getLastStageId","getStageConfById","stage_id","getStageGoal","id","stage_conf","goal_strs","goal_conf","goal","num","split","push","replace","toString","next","next_stage","trigger","stage_data","key","scene_name"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACZC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;0BAGjBM,Q,WADZF,OAAO,CAAC,UAAD,C,mCAAR,MACaE,QADb,SAC8BL,SAD9B,CACwC;AAUpC;AAiCA;AAEQM,QAAAA,WAAW,CAACC,IAAD,EAAe;AAC9B,gBAAMA,IAAN;;AAD8B;;AAAA;;AAAA,6CAvCI,IAAIC,GAAJ,EAuCJ;;AAAA,6CAtCI,IAAIA,GAAJ,EAsCJ;;AAAA;;AAAA,mDAlCH;AAC3B,oBAAQ;AACJ,4BAAc,QADV;AAEJ,wBAAU,CACN;AACI,sBAAM,QADV;AAEI,yBAAS,KAFb;AAGI,6BAAa;AAHjB,eADM,EAMN;AACI,sBAAM,QADV;AAEI,yBAAS,KAFb;AAGI,6BAAa;AAHjB,eANM,EAWN;AACI,sBAAM,QADV;AAEI,yBAAS,KAFb;AAGI,6BAAa;AAHjB,eAXM,EAgBN;AACI,sBAAM,QADV;AAEI,yBAAS,KAFb;AAGI,6BAAa;AAHjB,eAhBM,EAqBN;AACI,sBAAM,QADV;AAEI,yBAAS,KAFb;AAGI,6BAAa;AAHjB,eArBM;AAFN;AADmB,WAkCG;;AAE9B,eAAKC,IAAL,GAAY,KAAKC,YAAL,EAAZ;AACA,eAAKC,IAAL,GAAY;AAAA;AAAA,sCAAUC,YAAV,CAAuB,OAAvB,CAAZ;;AACA,cAAI,KAAKD,IAAT,EAAe;AAAE;AACb,iBAAKA,IAAL,CAAU,QAAV,EAAoBE,OAApB,CAA6BC,KAAD,IAAgB;AACxC,mBAAKC,SAAL,CAAeC,GAAf,CAAmBF,KAAK,CAAC,IAAD,CAAxB,EAAgCA,KAAhC;;AACA,kBAAI,CAACA,KAAK,CAAC,QAAD,CAAN,IAAoB,CAACA,KAAK,CAAC,QAAD,CAAL,CAAgBG,MAAzC,EAAiD;AAC7C;AACH;;AACDH,cAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBD,OAAhB,CAAyBK,KAAD,IAAgB;AACpC,qBAAKC,SAAL,CAAeH,GAAf,CAAmBE,KAAK,CAAC,IAAD,CAAxB,EAAgCA,KAAhC;AACH,eAFD;AAGA,mBAAKE,cAAL,CAAoBN,KAApB;AACH,aATD;AAUH;;AACD,eAAKO,SAAL,GAAiB,KAAKV,IAAL,CAAU,OAAV,CAAjB;AACA;AAAA;AAAA,sCAAUW,MAAV,CAAiB,aAAjB,EAAgC,KAAKf,IAArC,EAA2C,KAAKgB,gBAAhD,EAAkE,IAAlE;AACH;;AAEwB,eAAXC,WAAW,GAAG;AACxB,cAAI,CAACnB,QAAQ,CAACoB,GAAd,EAAmB;AAAEpB,YAAAA,QAAQ,CAACoB,GAAT,GAAe,IAAIpB,QAAJ,CAAa,UAAb,CAAf;AAA0C;;AAC/D,iBAAOA,QAAQ,CAACoB,GAAhB;AACH;;AAEOf,QAAAA,YAAY,GAAG;AACnB;AACA,iBAAO,KAAKgB,eAAZ,CAFmB,CAGnB;AACH,SA1EmC,CA4EpC;;;AACOC,QAAAA,YAAY,GAAG;AAClB,iBAAO,KAAKZ,SAAL,CAAea,GAAf,CAAmB,KAAKC,UAAxB,CAAP;AACH,SA/EmC,CAiFpC;;;AACOC,QAAAA,cAAc,GAAG;AACpB,iBAAO,KAAKf,SAAL,CAAea,GAAf,CAAmB,KAAKC,UAAxB,EAAoC,YAApC,CAAP;AACH;;AAEME,QAAAA,gBAAgB,CAACC,QAAD,EAAmB;AACtC,iBAAO,KAAKb,SAAL,CAAeS,GAAf,CAAmBI,QAAnB,CAAP;AACH;;AAEMC,QAAAA,YAAY,CAACC,EAAD,EAAuB;AAAE;AACxC,cAAIC,UAAU,GAAG,KAAKhB,SAAL,CAAeS,GAAf,CAAmBM,EAAnB,CAAjB;AACA,cAAIE,SAAmB,GAAG,EAA1B;AACAD,UAAAA,UAAU,CAAC,MAAD,CAAV,CAAmBtB,OAAnB,CAA4BwB,SAAD,IAAoB;AAC3C,gBAAI,CAACC,IAAD,EAAOC,GAAP,IAAcF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAlB;AACAJ,YAAAA,SAAS,CAACK,IAAV,CAAe,KAAKpB,SAAL,CAAeiB,IAAf,EAAqBI,OAArB,CAA6B,KAAKrB,SAAL,CAAe,aAAf,CAA7B,EAA4DkB,GAAG,CAACI,QAAJ,EAA5D,CAAf;AACH,WAHD;AAIA,iBAAOP,SAAP;AACH;;AAEOb,QAAAA,gBAAgB,CAACS,QAAD,EAAmB;AACvC,cAAIG,UAAU,GAAG,KAAKhB,SAAL,CAAeS,GAAf,CAAmBI,QAAnB,CAAjB;;AACA,cAAI,CAACG,UAAU,CAAC,OAAD,CAAf,EAA0B;AACtBA,YAAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,IAAtB;AACA,gBAAIrB,KAAK,GAAG,KAAKC,SAAL,CAAea,GAAf,CAAmBO,UAAU,CAAC,OAAD,CAA7B,CAAZ;AACA,gBAAIS,IAAI,GAAGT,UAAU,CAAC,MAAD,CAArB;;AACA,gBAAIS,IAAI,IAAI9B,KAAZ,EAAmB;AACf,kBAAI+B,UAAU,GAAG,KAAK1B,SAAL,CAAeS,GAAf,CAAmBgB,IAAnB,CAAjB;;AACA,kBAAIC,UAAJ,EAAgB;AACZA,gBAAAA,UAAU,CAAC,WAAD,CAAV,GAA0B,IAA1B;AACA;AAAA;AAAA,4CAAUC,OAAV,CAAkB,qBAAqBF,IAAvC,EAA6C,IAA7C;AACH;;AACD9B,cAAAA,KAAK,CAAC,YAAD,CAAL,GAAsB8B,IAAtB;AACH;AACJ;AACJ;;AAEOxB,QAAAA,cAAc,CAACT,IAAD,EAAY;AAAE;AAChC,cAAIF,IAAI,GAAG,KAAKA,IAAL,CAAUE,IAAI,CAAC,IAAD,CAAd,CAAX;;AACA,cAAIF,IAAJ,EAAU;AACNE,YAAAA,IAAI,CAAC,YAAD,CAAJ,GAAqBF,IAAI,CAAC,YAAD,CAAzB;AACAA,YAAAA,IAAI,CAAC,QAAD,CAAJ,CAAeI,OAAf,CAAwBkC,UAAD,IAAqB;AACxC,kBAAIb,EAAE,GAAGa,UAAU,CAAC,IAAD,CAAnB;AACA,kBAAIZ,UAAU,GAAG,KAAKhB,SAAL,CAAeS,GAAf,CAAmBM,EAAnB,CAAjB;;AACA,kBAAI,CAACA,EAAD,IAAO,CAACC,UAAZ,EAAwB;AACpB;AACH;;AACD,mBAAK,IAAIa,GAAT,IAAgBD,UAAhB,EAA4B;AACxBZ,gBAAAA,UAAU,CAACa,GAAD,CAAV,GAAkBD,UAAU,CAACC,GAAD,CAA5B;AACH;AACJ,aATD;AAUH;;AACD,iBAAOrC,IAAP;AACH,SArImC,CAuIpC;;;AACc,YAAVkB,UAAU,CAACoB,UAAD,EAAqB;AAC/B5C,UAAAA,QAAQ,CAACwB,UAAT,GAAsBoB,UAAtB;AACH;;AAEa,YAAVpB,UAAU,GAAG;AACb,iBAAOxB,QAAQ,CAACwB,UAAhB;AACH;;AA9ImC,O,kFAGA,E","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { Configure } from '../../Tools/Configure';\r\nimport { Subscribe } from '../../Tools/Subscribe';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('StageMgr')\r\nexport class StageMgr extends Component {\r\n\r\n    private static ist: StageMgr;\r\n    private static curr_scene: string = \"\";\r\n    private conf: any;\r\n    private data: any;\r\n    private scene_map: Map<string, any> = new Map();\r\n    private stage_map: Map<string, any> = new Map();\r\n    private goals_str: any;\r\n\r\n    // #################################\r\n    private test_stage_data: any = {\r\n        \"main\": {\r\n            \"last_stage\": \"main_1\",\r\n            \"stages\": [\r\n                {\r\n                    \"id\": \"main_1\",\r\n                    \"clear\": false,\r\n                    \"available\": true\r\n                },\r\n                {\r\n                    \"id\": \"main_2\",\r\n                    \"clear\": false,\r\n                    \"available\": false\r\n                },\r\n                {\r\n                    \"id\": \"main_3\",\r\n                    \"clear\": false,\r\n                    \"available\": false\r\n                },\r\n                {\r\n                    \"id\": \"main_4\",\r\n                    \"clear\": false,\r\n                    \"available\": false\r\n                },\r\n                {\r\n                    \"id\": \"main_5\",\r\n                    \"clear\": false,\r\n                    \"available\": false\r\n                }\r\n            ]\r\n        }\r\n    };\r\n    // #################################\r\n\r\n    private constructor(name: string) {\r\n        super(name);\r\n        this.data = this.getStageData();\r\n        this.conf = Configure.getConfigure(\"stage\");\r\n        if (this.conf) { // 初始化时读取关卡配置\r\n            this.conf[\"scenes\"].forEach((scene: any) => {\r\n                this.scene_map.set(scene[\"id\"], scene);\r\n                if (!scene[\"stages\"] || !scene[\"stages\"].length) {\r\n                    return;\r\n                }\r\n                scene[\"stages\"].forEach((stage: any) => {\r\n                    this.stage_map.set(stage[\"id\"], stage);\r\n                });\r\n                this.mergeData2Conf(scene);\r\n            });\r\n        }\r\n        this.goals_str = this.conf[\"goals\"];\r\n        Subscribe.listen(\"stage clear\", this.name, this.changeStageState, this);\r\n    }\r\n\r\n    public static getInstance() {\r\n        if (!StageMgr.ist) { StageMgr.ist = new StageMgr(\"StageMgr\"); }\r\n        return StageMgr.ist;\r\n    }\r\n\r\n    private getStageData() {\r\n        // #######################\r\n        return this.test_stage_data;\r\n        // #######################\r\n    }\r\n\r\n    // 获取关卡配置\r\n    public getSceneConf() {\r\n        return this.scene_map.get(this.curr_scene);\r\n    }\r\n\r\n    // 获取通关记录中的最后一关\r\n    public getLastStageId() {\r\n        return this.scene_map.get(this.curr_scene)[\"last_stage\"];\r\n    }\r\n\r\n    public getStageConfById(stage_id: string) {\r\n        return this.stage_map.get(stage_id);\r\n    }\r\n\r\n    public getStageGoal(id: string): string[] { // 获取关卡三星目标条件\r\n        let stage_conf = this.stage_map.get(id);\r\n        let goal_strs: string[] = []\r\n        stage_conf[\"goal\"].forEach((goal_conf: any) => {\r\n            let [goal, num] = goal_conf.split(\":\");\r\n            goal_strs.push(this.goals_str[goal].replace(this.goals_str[\"replacement\"], num.toString()));\r\n        });\r\n        return goal_strs;\r\n    }\r\n\r\n    private changeStageState(stage_id: string) {\r\n        let stage_conf = this.stage_map.get(stage_id);\r\n        if (!stage_conf[\"clear\"]) {\r\n            stage_conf[\"clear\"] = true;\r\n            let scene = this.scene_map.get(stage_conf[\"scene\"]);\r\n            let next = stage_conf[\"next\"];\r\n            if (next && scene) {\r\n                let next_stage = this.stage_map.get(next);\r\n                if (next_stage) {\r\n                    next_stage[\"available\"] = true;\r\n                    Subscribe.trigger(\"stage available \" + next, true);\r\n                }\r\n                scene[\"last_stage\"] = next;\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeData2Conf(conf: any) { // 合并玩家数据至关卡配置\r\n        let data = this.data[conf[\"id\"]];\r\n        if (data) {\r\n            conf[\"last_stage\"] = data[\"last_stage\"];\r\n            data[\"stages\"].forEach((stage_data: any) => {\r\n                let id = stage_data[\"id\"];\r\n                let stage_conf = this.stage_map.get(id);\r\n                if (!id || !stage_conf) {\r\n                    return;\r\n                }\r\n                for (let key in stage_data) {\r\n                    stage_conf[key] = stage_data[key];\r\n                }\r\n            });\r\n        }\r\n        return conf;\r\n    }\r\n\r\n    // 设置当前关卡名\r\n    set curr_scene(scene_name: string) {\r\n        StageMgr.curr_scene = scene_name;\r\n    }\r\n\r\n    get curr_scene() {\r\n        return StageMgr.curr_scene;\r\n    }\r\n}\r\n"]}