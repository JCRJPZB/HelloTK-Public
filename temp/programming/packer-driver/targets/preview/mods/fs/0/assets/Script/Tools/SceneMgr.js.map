{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/Tools/SceneMgr.ts"],"names":["_decorator","Component","director","ProgressBar","find","Subscribe","ccclass","property","SceneMgr","constructor","name","Map","listen","loadScene","getInstance","ist","scene_name","data","trigger","pb","getComponent","loadStart","preloadScene","completeCount","totalcount","item","ratio","progress","loadComplete","e","returnToStart","getScene","num","scene_load_count","get","set"],"mappings":"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","sourcesContent":["import { _decorator, Component, director, ProgressBar, find } from 'cc';\r\nimport { Subscribe } from './Subscribe';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SceneMgr')\r\nexport class SceneMgr extends Component {\r\n\r\n    private static ist: SceneMgr | null = null;\r\n\r\n    private pb: ProgressBar | null | undefined = null; // 加载进度条\r\n    private scene_load_count: Map<string, number> = new Map();\r\n\r\n    private constructor(name: string) {\r\n        super(name);\r\n        Subscribe.listen(\"load scene\", this.name ,this.loadScene, this);\r\n    }\r\n\r\n    public static getInstance(): SceneMgr {\r\n        if (!SceneMgr.ist) {\r\n            SceneMgr.ist = new SceneMgr(\"SceneMgr\");\r\n        }\r\n        return SceneMgr.ist;\r\n    }\r\n\r\n    private loadScene(scene_name: string, data: any) {\r\n        Subscribe.trigger(\"start load scene\");\r\n        director.loadScene(\"Loading\", () => { // 先进入加载场景以做过渡\r\n            this.pb = find(\"/Canvas/ProgressBar\")?.getComponent(ProgressBar);\r\n            this.loadStart(scene_name, data);\r\n        });\r\n    }\r\n\r\n    private loadStart(scene_name: string, data: any) {\r\n        try {\r\n            director.preloadScene(scene_name, (completeCount: number, totalcount: number, item: any) => {\r\n                // 预加载，同时根据加载进度更新进度条\r\n                let ratio = completeCount / totalcount;\r\n                if (!this.pb) { Subscribe.trigger(\"log err\", \"Load progress bar failed!\"); return; }\r\n                this.pb.progress = ratio;\r\n            }, () => { director.loadScene(scene_name, () => { this.loadComplete(data); }); }); // 加载完成回调\r\n        } catch (e) {\r\n            Subscribe.trigger(\"log err\", \"Can't find scene named: \" + scene_name);\r\n            this.returnToStart();\r\n        }\r\n    }\r\n\r\n    private loadComplete(data: any) {\r\n        let scene_name = director.getScene()?.name;\r\n        if (!scene_name) {\r\n            Subscribe.trigger(\"log err\", \"Load scene error!\");\r\n            this.returnToStart();\r\n            return;\r\n        }\r\n        let num = this.scene_load_count.get(scene_name); // 保存场景加载次数\r\n        if (num) { this.scene_load_count.set(scene_name, ++num); }\r\n        else { this.scene_load_count.set(scene_name, 1); }\r\n        Subscribe.trigger(\"change scene\", scene_name, num ? num : 1, data); // 发射加载完成消息\r\n    }\r\n\r\n    private returnToStart() {\r\n        this.loadScene(\"StartScene\", null);\r\n    }\r\n}\r\n"]}