{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/BattleField/HP/HpMgr.ts"],"names":["_decorator","Component","Generator","Subscribe","HpNum","ccclass","property","HpMgr","constructor","name","Map","gen","getInstance","listen","changeHp","hpBar_root","num_root","trigger","ist","reset","num_map","clear","genHpNum","hero","camp","new_hpBar","generator","num_ctrl","getComponent","init","getConf","node","set","id","hero_map","init_total_hp","conf","heros","total","forEach","value","bar","get","rest","heroDie","getCamp","scheduleOnce","hpNum","parent","delete","onDestroy","unscheduleAllCallbacks"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { Generator } from '../../Tools/Generator';\r\nimport { Subscribe } from '../../Tools/Subscribe';\r\nimport { Info } from '../Attack/Info';\r\nimport { HpNum } from './HpNum';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HpMgr')\r\nexport class HpMgr extends Component {\r\n\r\n    // 血量管理\r\n\r\n    private static ist: HpMgr | null = null; // 单例\r\n    private gen: Generator | null = null; // 生成器\r\n    private static num_root: Node | null = null; // 血条根节点\r\n    private num_map: Map<string, HpNum> = new Map(); // 血条哈希表\r\n    private hero_map: Map<string, Info> = new Map(); // Info哈希表\r\n\r\n    private constructor(name: string) { // 初始化\r\n        super(name);\r\n        this.gen = Generator.getInstance();\r\n        Subscribe.listen(\"change hp\", this.name, this.changeHp, this);\r\n        Subscribe.listen(\"set hp bar root\", this.name, (hpBar_root: Node) => {\r\n            HpMgr.num_root = hpBar_root;\r\n            Subscribe.trigger(\"Hp manager is ready\");\r\n        });\r\n    }\r\n\r\n    public static getInstance() { // 获取单例\r\n        if (!HpMgr.ist) { HpMgr.ist = new HpMgr(\"HpMgr\"); }\r\n        return HpMgr.ist;\r\n    }\r\n\r\n    public reset() { // 清除数据(为重复进入战斗界面做准备)\r\n        this.num_map.clear();\r\n    }\r\n\r\n    public genHpNum(hero: Info, camp: string) { // 生成血条\r\n        if (!this.gen) { this.gen = Generator.getInstance(); }\r\n        if (!HpMgr.num_root) {\r\n            Subscribe.trigger(\"log err\", \"Hp bar root is undefined!\");\r\n            return;\r\n        }\r\n        let new_hpBar = this.gen.generator(HpMgr.num_root, \"HpNum\"); // 实例化，父节点为血条根节点\r\n        let num_ctrl = new_hpBar?.getComponent(HpNum); // 获得血量的脚本组件\r\n        if (!num_ctrl) { Subscribe.trigger(\"log err\", \"Component doesn't exist!\"); return; }\r\n        num_ctrl.init(hero.getConf(\"hp\"), hero.node, camp); // 传参初始化\r\n        this.num_map.set(hero.id, num_ctrl); // 存\r\n        this.hero_map.set(hero.id, hero); // 存\r\n    }\r\n\r\n    public init_total_hp(conf: any, camp: string) { // 根据配置统计血量\r\n        let heros = conf[\"heros\"];\r\n        let total = 0;\r\n        heros.forEach((hero: any) => { total += hero[\"hp\"]; }); // 累加\r\n        Subscribe.trigger(\"battle set total hp\", total, camp);\r\n    }\r\n\r\n    public changeHp(id: string, value: number) { // 血量变化\r\n        let bar = this.num_map.get(id); // 获取发生变化的对象\r\n        if (!bar) {\r\n            Subscribe.trigger(\"log err\", \"Can't find \" + id + \"'s hp bar!\");\r\n            return;\r\n        }\r\n        let rest = bar.changeHp(value); // 应用变化\r\n        if (rest <= 0) { this.heroDie(id); value -= rest; } // 武将死亡 || 减去溢出的伤害(用以正确计算总血量的变化)\r\n        Subscribe.trigger(\"battle change total hp\", value, bar.getCamp());\r\n    }\r\n\r\n    public heroDie(id: string) { // 武将阵亡\r\n        this.scheduleOnce(() => {\r\n            Subscribe.trigger(\"hero die\", this.hero_map.get(id)); // 发射消息\r\n            let hpNum = this.num_map.get(id); // 获取对应的血量节点并将其从父节点移除\r\n            if (hpNum) { hpNum.node.parent = null; }\r\n            this.num_map.delete(id); // 根据ID删除对应的键值\r\n            this.hero_map.delete(id);\r\n        }, 1);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.unscheduleAllCallbacks();\r\n    }\r\n}\r\n"]}