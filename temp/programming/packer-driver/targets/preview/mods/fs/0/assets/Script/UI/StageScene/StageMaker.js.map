{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/UI/StageScene/StageMaker.ts"],"names":["_decorator","Component","find","Generator","Subscribe","StageMgr","StagePoint","ccclass","property","StageMaker","onLoad","listen","name","generatorStageUI","scene_name","ui_root","mgr","getInstance","curr_scene","stage_root","gen","conf","getSceneConf","forEach","stage","trigger","new_stage","generator","stage_ctrl","getComponent","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;4BAGjBS,U,WADZF,OAAO,CAAC,YAAD,C,yBAAR,MACaE,UADb,SACgCR,SADhC,CAC0C;AAAA;AAAA;;AAAA,uCAEP,IAFO;;AAAA;AAAA;;AAKtCS,QAAAA,MAAM,GAAG;AACL;AAAA;AAAA,sCAAUC,MAAV,CAAiB,oBAAjB,EAAuC,KAAKC,IAA5C,EAAkD,KAAKC,gBAAvD,EAAyE,IAAzE;AACH;;AAEOA,QAAAA,gBAAgB,CAACC,UAAD,EAAqBC,OAArB,EAAoC;AACxD,eAAKC,GAAL,GAAW;AAAA;AAAA,oCAASC,WAAT,EAAX;AACA,eAAKD,GAAL,CAASE,UAAT,GAAsBJ,UAAtB,CAFwD,CAEtB;;AAClC,cAAIK,UAAU,GAAGjB,IAAI,CAAC,sBAAD,CAArB;AACA,cAAIkB,GAAG,GAAG;AAAA;AAAA,sCAAUH,WAAV,EAAV,CAJwD,CAKxD;AACA;;AACA,eAAKI,IAAL,GAAY,KAAKL,GAAL,CAASM,YAAT,EAAZ,CAPwD,CAOnB;;AACrC,eAAKD,IAAL,CAAU,QAAV,EAAoBE,OAApB,CAA6BC,KAAD,IAAgB;AAAE;AAC1C,gBAAI,CAACL,UAAD,IAAe,CAACJ,OAApB,EAA6B;AAAE;AAAA;AAAA,0CAAUU,OAAV,CAAkB,SAAlB,EAA6B,kBAA7B;AAAkD;AAAS,aADlD,CAExC;;;AACA,gBAAIC,SAAS,GAAGN,GAAG,CAACO,SAAJ,CAAcR,UAAd,EAA0B,aAA1B,CAAhB,CAHwC,CAGkB;;AAC1D,gBAAIS,UAAU,GAAGF,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,YAAX;AAAA;AAAA,yCAAjB,CAJwC,CAIc;;AACtD,gBAAID,UAAJ,EAAgB;AACZA,cAAAA,UAAU,CAACE,IAAX,CAAgBf,OAAhB,EAAyBS,KAAzB,EADY,CACqB;AACpC;AACJ,WARD,EARwD,CAiBxD;AACH;;AA3BqC,O","sourcesContent":["import { _decorator, Component, Node, find } from 'cc';\r\nimport { Generator } from '../../Tools/Generator';\r\nimport { Subscribe } from '../../Tools/Subscribe';\r\nimport { StageMgr } from './StageMgr';\r\nimport { StagePoint } from './StagePoint';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('StageMaker')\r\nexport class StageMaker extends Component {\r\n\r\n    private mgr: StageMgr | null = null;\r\n    private conf: any;\r\n\r\n    onLoad() {\r\n        Subscribe.listen(\"generator stage ui\", this.name, this.generatorStageUI, this);\r\n    }\r\n\r\n    private generatorStageUI(scene_name: string, ui_root: Node) {\r\n        this.mgr = StageMgr.getInstance();\r\n        this.mgr.curr_scene = scene_name; // 更新关卡名\r\n        let stage_root = find(\"/SafeArea/Stage_Root\");\r\n        let gen = Generator.getInstance();\r\n        // 后续需要考虑多种副本，先将主线副本DEMO完成\r\n        // #########################################################\r\n        this.conf = this.mgr.getSceneConf(); // 读取关卡配置\r\n        this.conf[\"stages\"].forEach((stage: any) => { // 根据配置生成关卡地图\r\n            if (!stage_root || !ui_root) { Subscribe.trigger(\"log err\", \"Can'f find root!\"); return; }\r\n            // let pos = v3(stage[\"pos\"][0], stage[\"pos\"][1], stage[\"pos\"][2]); // 获取当前生成的关卡的摆放位置\r\n            let new_stage = gen.generator(stage_root, \"Stage_model\"); // 生成当前关卡\r\n            let stage_ctrl = new_stage?.getComponent(StagePoint); // 获取脚本\r\n            if (stage_ctrl) {\r\n                stage_ctrl.init(ui_root, stage); // 初始化\r\n            }\r\n        });\r\n        // #########################################################\r\n    }\r\n}\r\n"]}