{"version":3,"sources":["file:///E:/GitHub/HelloTK/assets/Script/Tools/ResMgr.ts"],"names":["_decorator","Component","resources","assetManager","Configure","Subscribe","ccclass","property","ResMgr","onLoad","preloadDir","e","trigger","bundle_map","set","listen","name","loadBundle","list","getConfigure","rest","length","forEach","err","bundle","message","loadRes","bundle_name","path","type","callBack","param","get","load","res","loadDir","preLoad","preload","Map"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Y,OAAAA,Y;;AAC/CC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;wBAGjBQ,M,WADZF,OAAO,CAAC,QAAD,C,mCAAR,MACaE,MADb,SAC4BP,SAD5B,CACsC;AAIlCQ,QAAAA,MAAM,GAAG;AACL,cAAI;AAAEP,YAAAA,SAAS,CAACQ,UAAV,CAAqB,GAArB;AAA4B,WAAlC,CACA,OAAOC,CAAP,EAAU;AAAE;AAAA;AAAA,wCAAUC,OAAV,CAAkB,WAAlB,EAAuCD,CAAvC;AAA2C;AAAS;;AAChEH,UAAAA,MAAM,CAACK,UAAP,CAAkBC,GAAlB,CAAsB,WAAtB,EAAmCZ,SAAnC,EAHK,CAG0C;;AAC/C;AAAA;AAAA,sCAAUU,OAAV,CAAkB,kBAAlB;AACA;AAAA;AAAA,sCAAUG,MAAV,CAAiB,iBAAjB,EAAoC,KAAKC,IAAzC,EAA+CR,MAAM,CAACS,UAAtD,EAAkE,IAAlE;AACH;;AAEwB,eAAVA,UAAU,GAAG;AACxB;AACA,cAAIC,IAAI,GAAG;AAAA;AAAA,sCAAUC,YAAV,CAAuB,aAAvB,EAAsC,SAAtC,CAAX;;AACA,cAAI,CAACD,IAAL,EAAW;AAAE;AAAA;AAAA,wCAAUN,OAAV,CAAkB,WAAlB,EAA+B,OAA/B;AAAyC;AAAS;;AAC/D,cAAIQ,IAAI,GAAGF,IAAI,CAACG,MAAhB;AACAH,UAAAA,IAAI,CAACI,OAAL,CAAcN,IAAD,IAAkB;AAC3Bb,YAAAA,YAAY,CAACc,UAAb,CAAwBD,IAAxB,EAA8B,CAACO,GAAD,EAAoBC,MAApB,KAAoD;AAC9E,kBAAID,GAAJ,EAAS;AAAE;AAAA;AAAA,4CAAUX,OAAV,CAAkB,WAAlB,EAA+BW,GAAG,CAACE,OAAnC;AAA6C;AAAS;;AACjEjB,cAAAA,MAAM,CAACK,UAAP,CAAkBC,GAAlB,CAAsBE,IAAtB,EAA4BQ,MAA5B;;AACA,kBAAI,EAAEJ,IAAF,GAAS,CAAb,EAAgB;AAAE;AAAA;AAAA,4CAAUR,OAAV,CAAkB,eAAlB;AAAqC;AAC1D,aAJD;AAKH,WAND;AAOH;;AAEoB,eAAPc,OAAO,CAACC,WAAD,EAAsBC,IAAtB,EAAoCC,IAApC,EAAwDC,QAAxD,EAAoFC,KAApF,EAAiG;AAAE;AACpH,cAAIP,MAAM,GAAGhB,MAAM,CAACK,UAAP,CAAkBmB,GAAlB,CAAsBL,WAAtB,CAAb;;AACA,cAAI,CAACH,MAAL,EAAa;AAAE;AAAA;AAAA,wCAAUZ,OAAV,CAAkB,WAAlB,EAA+B,uBAAuBe,WAAtD;AAAoE;AAAS;;AAC5FH,UAAAA,MAAM,CAACS,IAAP,CAAYL,IAAZ,EAAkBC,IAAlB,EAAwB,IAAxB,EAA8B,CAACN,GAAD,EAAoBW,GAApB,KAAmC;AAC7D,gBAAIX,GAAJ,EAAS;AAAE;AAAA;AAAA,0CAAUX,OAAV,CAAkB,SAAlB,EAA6BW,GAAG,CAACE,OAAjC;AAA2CK,cAAAA,QAAQ,CAAC,IAAD,EAAOC,KAAP,CAAR;AAAuB;AAAS;;AACtFD,YAAAA,QAAQ,CAACI,GAAD,EAAMH,KAAN,CAAR;AACH,WAHD;AAIH;;AAEoB,eAAPI,OAAO,CAACR,WAAD,EAAsBC,IAAtB,EAAoCC,IAApC,EAAwDC,QAAxD,EAAoFC,KAApF,EAAiG;AAAE;AACpH,cAAIP,MAAM,GAAGhB,MAAM,CAACK,UAAP,CAAkBmB,GAAlB,CAAsBL,WAAtB,CAAb;;AACA,cAAI,CAACH,MAAL,EAAa;AAAE;AAAA;AAAA,wCAAUZ,OAAV,CAAkB,WAAlB,EAA+B,uBAAuBe,WAAtD;AAAoE;AAAS;;AAC5FH,UAAAA,MAAM,CAACW,OAAP,CAAeP,IAAf,EAAqBC,IAArB,EAA2B,CAACN,GAAD,EAAoBW,GAApB,KAAqC;AAC5D,gBAAIX,GAAJ,EAAS;AAAE;AAAA;AAAA,0CAAUX,OAAV,CAAkB,SAAlB,EAA6BW,GAAG,CAACE,OAAjC;AAA2CK,cAAAA,QAAQ,CAAC,IAAD,EAAOC,KAAP,CAAR;AAAuB;AAAS;;AACtFD,YAAAA,QAAQ,CAACI,GAAD,EAAMH,KAAN,CAAR;AACH,WAHD;AAIH;;AAEoB,eAAPK,OAAO,CAACT,WAAD,EAAsBC,IAAtB,EAAoCC,IAApC,EAAwD;AAAE;AAC3E,cAAIL,MAAM,GAAGhB,MAAM,CAACK,UAAP,CAAkBmB,GAAlB,CAAsBL,WAAtB,CAAb;;AACA,cAAI,CAACH,MAAL,EAAa;AAAE;AAAA;AAAA,wCAAUZ,OAAV,CAAkB,SAAlB,EAA6B,uBAAuBe,WAApD;AAAkE;AAAS;;AAC1FH,UAAAA,MAAM,CAACa,OAAP,CAAeT,IAAf,EAAqBC,IAArB;AACH;;AAhDiC,O,yCAE4B,IAAIS,GAAJ,E","sourcesContent":["import { _decorator, Component, Node, Asset, resources, assetManager, AssetManager } from 'cc';\r\nimport { Configure } from './Configure';\r\nimport { Subscribe } from './Subscribe';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ResMgr')\r\nexport class ResMgr extends Component {\r\n\r\n    private static bundle_map: Map<string, AssetManager.Bundle> = new Map<string, AssetManager.Bundle>();\r\n\r\n    onLoad() {\r\n        try { resources.preloadDir(\"/\"); }\r\n        catch (e) { Subscribe.trigger(\"print err\", <string>e); return; }\r\n        ResMgr.bundle_map.set(\"resources\", resources); // 将内置资源bundle放入map\r\n        Subscribe.trigger(\"resources loaded\");\r\n        Subscribe.listen(\"settings loaded\", this.name, ResMgr.loadBundle, this);\r\n    }\r\n\r\n    private static loadBundle() {\r\n        // ############# 远程的bundle需要给出服务器访问文件夹的地址 ########\r\n        let list = Configure.getConfigure(\"bundle_list\")[\"bundles\"];\r\n        if (!list) { Subscribe.trigger(\"alert err\", \"未知错误!\"); return; }\r\n        let rest = list.length;\r\n        list.forEach((name: string) => {\r\n            assetManager.loadBundle(name, (err: Error | null, bundle: AssetManager.Bundle) => {\r\n                if (err) { Subscribe.trigger(\"print err\", err.message); return; }\r\n                ResMgr.bundle_map.set(name, bundle);\r\n                if (--rest < 1) { Subscribe.trigger(\"bundle loaded\"); }\r\n            });\r\n        });\r\n    }\r\n\r\n    public static loadRes(bundle_name: string, path: string, type: typeof Asset, callBack: CallableFunction, param?: any) { // 加载资源\r\n        let bundle = ResMgr.bundle_map.get(bundle_name);\r\n        if (!bundle) { Subscribe.trigger(\"print err\", \"Bundle not found: \" + bundle_name); return; }\r\n        bundle.load(path, type, null, (err: Error | null, res: Asset) => {\r\n            if (err) { Subscribe.trigger(\"log err\", err.message); callBack(null, param); return; }\r\n            callBack(res, param);\r\n        });\r\n    }\r\n\r\n    public static loadDir(bundle_name: string, path: string, type: typeof Asset, callBack: CallableFunction, param?: any) { // 加载文件夹\r\n        let bundle = ResMgr.bundle_map.get(bundle_name);\r\n        if (!bundle) { Subscribe.trigger(\"print err\", \"Bundle not found: \" + bundle_name); return; }\r\n        bundle.loadDir(path, type, (err: Error | null, res: Asset[]) => {\r\n            if (err) { Subscribe.trigger(\"log err\", err.message); callBack(null, param); return; }\r\n            callBack(res, param);\r\n        });\r\n    }\r\n\r\n    public static preLoad(bundle_name: string, path: string, type: typeof Asset) { // 预加载\r\n        let bundle = ResMgr.bundle_map.get(bundle_name);\r\n        if (!bundle) { Subscribe.trigger(\"log err\", \"Bundle not found: \" + bundle_name); return; }\r\n        bundle.preload(path, type);\r\n    }\r\n}\r\n"]}